// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/proto/calculator.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	Int1                 int64    `protobuf:"varint,1,opt,name=int1,proto3" json:"int1,omitempty"`
	Int2                 int64    `protobuf:"varint,2,opt,name=int2,proto3" json:"int2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d2a7eb5a895a616, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetInt1() int64 {
	if m != nil {
		return m.Int1
	}
	return 0
}

func (m *SumRequest) GetInt2() int64 {
	if m != nil {
		return m.Int2
	}
	return 0
}

type SumResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d2a7eb5a895a616, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type SubtractRequest struct {
	Int1                 int64    `protobuf:"varint,1,opt,name=int1,proto3" json:"int1,omitempty"`
	Int2                 int64    `protobuf:"varint,2,opt,name=int2,proto3" json:"int2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubtractRequest) Reset()         { *m = SubtractRequest{} }
func (m *SubtractRequest) String() string { return proto.CompactTextString(m) }
func (*SubtractRequest) ProtoMessage()    {}
func (*SubtractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d2a7eb5a895a616, []int{2}
}

func (m *SubtractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubtractRequest.Unmarshal(m, b)
}
func (m *SubtractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubtractRequest.Marshal(b, m, deterministic)
}
func (m *SubtractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubtractRequest.Merge(m, src)
}
func (m *SubtractRequest) XXX_Size() int {
	return xxx_messageInfo_SubtractRequest.Size(m)
}
func (m *SubtractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubtractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubtractRequest proto.InternalMessageInfo

func (m *SubtractRequest) GetInt1() int64 {
	if m != nil {
		return m.Int1
	}
	return 0
}

func (m *SubtractRequest) GetInt2() int64 {
	if m != nil {
		return m.Int2
	}
	return 0
}

type SubtractResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubtractResponse) Reset()         { *m = SubtractResponse{} }
func (m *SubtractResponse) String() string { return proto.CompactTextString(m) }
func (*SubtractResponse) ProtoMessage()    {}
func (*SubtractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d2a7eb5a895a616, []int{3}
}

func (m *SubtractResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubtractResponse.Unmarshal(m, b)
}
func (m *SubtractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubtractResponse.Marshal(b, m, deterministic)
}
func (m *SubtractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubtractResponse.Merge(m, src)
}
func (m *SubtractResponse) XXX_Size() int {
	return xxx_messageInfo_SubtractResponse.Size(m)
}
func (m *SubtractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubtractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubtractResponse proto.InternalMessageInfo

func (m *SubtractResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*SubtractRequest)(nil), "calculator.SubtractRequest")
	proto.RegisterType((*SubtractResponse)(nil), "calculator.SubtractResponse")
}

func init() { proto.RegisterFile("calculator/proto/calculator.proto", fileDescriptor_3d2a7eb5a895a616) }

var fileDescriptor_3d2a7eb5a895a616 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4c, 0x4e, 0xcc, 0x49,
	0x2e, 0xcd, 0x49, 0x2c, 0xc9, 0x2f, 0xd2, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x47, 0x08, 0xe8,
	0x81, 0x05, 0x84, 0xb8, 0x10, 0x22, 0x4a, 0x26, 0x5c, 0x5c, 0xc1, 0xa5, 0xb9, 0x41, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x99, 0x79, 0x25, 0x86, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0xcc, 0x41, 0x60, 0x36, 0x54, 0xcc, 0x48, 0x82, 0x09, 0x2e, 0x66, 0xa4, 0xa4, 0xca, 0xc5,
	0x0d, 0xd6, 0x55, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc6, 0xc5, 0x56, 0x94, 0x5a, 0x5c,
	0x9a, 0x53, 0x02, 0xd5, 0x08, 0xe5, 0x29, 0x59, 0x72, 0xf1, 0x07, 0x97, 0x26, 0x95, 0x14, 0x25,
	0x26, 0x97, 0x90, 0x6a, 0x83, 0x16, 0x97, 0x00, 0x42, 0x2b, 0x7e, 0x6b, 0x8c, 0x96, 0x31, 0x72,
	0x09, 0x3a, 0xc3, 0xbd, 0x14, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0xe4, 0x00, 0x76, 0xa3,
	0x67, 0x5e, 0x49, 0x6a, 0x7a, 0x6a, 0x51, 0xb1, 0x90, 0x98, 0x1e, 0x52, 0x38, 0x20, 0xbc, 0x2c,
	0x25, 0x8e, 0x21, 0x0e, 0xb1, 0x4d, 0x89, 0x41, 0xc8, 0x1f, 0xe1, 0x06, 0xb8, 0x31, 0xd2, 0xa8,
	0xca, 0x51, 0x3c, 0x27, 0x25, 0x83, 0x5d, 0x12, 0x66, 0xa0, 0x13, 0x7b, 0x14, 0x2b, 0x38, 0x06,
	0x92, 0xd8, 0xc0, 0x94, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x59, 0x30, 0x7d, 0xb0, 0xad, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	SumIntegers(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	SubtractIntegers(ctx context.Context, in *SubtractRequest, opts ...grpc.CallOption) (*SubtractResponse, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) SumIntegers(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/SumIntegers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) SubtractIntegers(ctx context.Context, in *SubtractRequest, opts ...grpc.CallOption) (*SubtractResponse, error) {
	out := new(SubtractResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/SubtractIntegers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	SumIntegers(context.Context, *SumRequest) (*SumResponse, error)
	SubtractIntegers(context.Context, *SubtractRequest) (*SubtractResponse, error)
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) SumIntegers(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SumIntegers not implemented")
}
func (*UnimplementedCalculatorServiceServer) SubtractIntegers(ctx context.Context, req *SubtractRequest) (*SubtractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubtractIntegers not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_SumIntegers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).SumIntegers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/SumIntegers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).SumIntegers(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_SubtractIntegers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubtractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).SubtractIntegers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/SubtractIntegers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).SubtractIntegers(ctx, req.(*SubtractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SumIntegers",
			Handler:    _CalculatorService_SumIntegers_Handler,
		},
		{
			MethodName: "SubtractIntegers",
			Handler:    _CalculatorService_SubtractIntegers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculator/proto/calculator.proto",
}
